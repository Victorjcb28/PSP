#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.1 on Tue Jun 20 10:45:06 2017
#

import wx
import funciones as f
import sqlite3 as sq3
# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Principal(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Principal.__init__
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("Seleccion de Postulantes"))
        self.label_2 = wx.StaticText(self, wx.ID_ANY, _("Cargo:"))
        self.cobCargo = wx.ComboBox(self, wx.ID_ANY, choices=[_("ADMINISTRACION"), _("ASISTENTE"), _("CAJERO"), _("CHOFER"), _("VIGILANTE"), _("GERENTE VENTAS"), _("ASISTENTE VENTAS"), _("SERVICIO AL CLIENTE"), _("RECURSOS HUMANOS")], style=wx.CB_READONLY)
        self.bitmap_button_1 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("iconos/buscar.png", wx.BITMAP_TYPE_ANY))
        self.label_3 = wx.StaticText(self, wx.ID_ANY, _("Nombre"))
        self.txtNombre1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_4 = wx.StaticText(self, wx.ID_ANY, _("Apellido"))
        self.txtApellido1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_5 = wx.StaticText(self, wx.ID_ANY, _("Cedula"))
        self.txtCedula = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_12 = wx.StaticText(self, wx.ID_ANY, _("Merito"))
        self.txtMerito = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_13 = wx.StaticText(self, wx.ID_ANY, _("Curso"))
        self.txtCurso = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_1 = wx.Button(self, wx.ID_ANY, _("Seleccionar"))
        self.label_6 = wx.StaticText(self, wx.ID_ANY, _("Nombre"))
        self.txtNombre2 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_7 = wx.StaticText(self, wx.ID_ANY, _("Apellido"))
        self.txtApellido2 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_8 = wx.StaticText(self, wx.ID_ANY, _("Cedula"))
        self.txtCedula2 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_14 = wx.StaticText(self, wx.ID_ANY, _("Merito"))
        self.txtMerito1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_15 = wx.StaticText(self, wx.ID_ANY, _("Curso"))
        self.txtCurso1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Seleccionar"))
        self.label_9 = wx.StaticText(self, wx.ID_ANY, _("Nombre"))
        self.txtNombre3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_10 = wx.StaticText(self, wx.ID_ANY, _("Apellido"))
        self.txtApellido3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_11 = wx.StaticText(self, wx.ID_ANY, _("Cedula"))
        self.txtCedula3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_16 = wx.StaticText(self, wx.ID_ANY, _("Merito"))
        self.txtMerito3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_17 = wx.StaticText(self, wx.ID_ANY, _("Curso"))
        self.txtCurso3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_1_copy_copy = wx.Button(self, wx.ID_ANY, _("Seleccionar"))
        self.label_18 = wx.StaticText(self, wx.ID_ANY, _("Nombre"))
        self.txtNombre4 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_19 = wx.StaticText(self, wx.ID_ANY, _("Apellido"))
        self.txtApellido4 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_20 = wx.StaticText(self, wx.ID_ANY, _("Cedula"))
        self.txtCedula4 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_21 = wx.StaticText(self, wx.ID_ANY, _("Merito"))
        self.txtMerito4 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_22 = wx.StaticText(self, wx.ID_ANY, _("Curso"))
        self.txtCurso4 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_1_copy_copy_copy = wx.Button(self, wx.ID_ANY, _("Seleccionar"))
        self.label_23 = wx.StaticText(self, wx.ID_ANY, _("Nombre"))
        self.txtNombre5 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_24 = wx.StaticText(self, wx.ID_ANY, _("Apellido"))
        self.txtApellido5 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_25 = wx.StaticText(self, wx.ID_ANY, _("Cedula"))
        self.txtCedula5 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_26 = wx.StaticText(self, wx.ID_ANY, _("Merito"))
        self.txtMerito5 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.label_27 = wx.StaticText(self, wx.ID_ANY, _("Curso"))
        self.txtCurso5 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_1_copy_copy_copy_copy = wx.Button(self, wx.ID_ANY, _("Seleccionar"))

        self.__set_properties()
        self.cobCargo.SetValidator(ContieneDatos())#activa la validacion
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnBuscar, self.bitmap_button_1)
        self.Bind(wx.EVT_BUTTON, self.OnSeleccionar1, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnSeleccionar2, self.button_1_copy)
        self.Bind(wx.EVT_BUTTON, self.OnSeleccionar3, self.button_1_copy_copy)
        self.Bind(wx.EVT_BUTTON, self.OnSeleccionar4, self.button_1_copy_copy_copy)
        self.Bind(wx.EVT_BUTTON, self.OnSeleccionar5, self.button_1_copy_copy_copy_copy)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Principal.__set_properties
        self.SetTitle(_("Seleccion Postulantes"))
        self.SetSize((1320, 500))
        self.label_1.SetMinSize((254, 50))
        self.label_2.SetMinSize((52, 20))
        self.label_1.SetFont(wx.Font(16, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Cantarell"))
        self.bitmap_button_1.SetSize(self.bitmap_button_1.GetBestSize())
        self.txtNombre1.SetMinSize((200, 32))
        self.txtApellido1.SetMinSize((200, 32))
        self.txtCedula.SetMinSize((150, 32))
        self.txtMerito.SetMinSize((150, 32))
        self.txtCurso.SetMinSize((200, 32))
        self.txtNombre2.SetMinSize((200, 32))
        self.txtApellido2.SetMinSize((200, 32))
        self.txtCedula2.SetMinSize((150, 32))
        self.txtMerito1.SetMinSize((150, 32))
        self.txtCurso1.SetMinSize((200, 32))
        self.txtNombre3.SetMinSize((200, 32))
        self.txtApellido3.SetMinSize((200, 32))
        self.label_11.SetMinSize((47, 20))
        self.txtCedula3.SetMinSize((150, 32))
        self.txtMerito3.SetMinSize((150, 32))
        self.txtCurso3.SetMinSize((200, 32))
        self.label_18.SetMinSize((52, 20))
        self.txtNombre4.SetMinSize((200, 32))
        self.label_19.SetMinSize((52, 20))
        self.txtApellido4.SetMinSize((200, 32))
        self.label_20.SetMinSize((47, 20))
        self.txtCedula4.SetMinSize((150, 32))
        self.label_21.SetMinSize((41, 20))
        self.txtMerito4.SetMinSize((150, 32))
        self.label_22.SetMinSize((38, 20))
        self.txtCurso4.SetMinSize((200, 32))
        self.label_23.SetMinSize((52, 20))
        self.txtNombre5.SetMinSize((200, 32))
        self.label_24.SetMinSize((52, 20))
        self.txtApellido5.SetMinSize((200, 32))
        self.label_25.SetMinSize((47, 20))
        self.txtCedula5.SetMinSize((150, 32))
        self.label_26.SetMinSize((41, 20))
        self.txtMerito5.SetMinSize((150, 32))
        self.label_27.SetMinSize((38, 20))
        self.txtCurso5.SetMinSize((200, 32))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Principal.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(12, 1, 0, 0)
        grid_sizer_7 = wx.FlexGridSizer(1, 16, 0, 0)
        grid_sizer_6 = wx.FlexGridSizer(1, 16, 0, 0)
        grid_sizer_5 = wx.FlexGridSizer(1, 16, 0, 0)
        grid_sizer_4 = wx.FlexGridSizer(1, 17, 0, 0)
        grid_sizer_3 = wx.FlexGridSizer(1, 17, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(1, 5, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_2.Add(self.label_2, 0, 0, 0)
        grid_sizer_2.Add(self.cobCargo, 0, 0, 0)
        grid_sizer_2.Add((20, 20), 0, 0, 0)
        grid_sizer_2.Add(self.bitmap_button_1, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.label_3, 0, 0, 0)
        grid_sizer_3.Add(self.txtNombre1, 0, 0, 0)
        grid_sizer_3.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.label_4, 0, 0, 0)
        grid_sizer_3.Add(self.txtApellido1, 0, 0, 0)
        grid_sizer_3.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.label_5, 0, 0, 0)
        grid_sizer_3.Add(self.txtCedula, 0, 0, 0)
        grid_sizer_3.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.label_12, 0, 0, 0)
        grid_sizer_3.Add(self.txtMerito, 0, 0, 0)
        grid_sizer_3.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.label_13, 0, 0, 0)
        grid_sizer_3.Add(self.txtCurso, 0, 0, 0)
        grid_sizer_3.Add((20, 20), 0, 0, 0)
        grid_sizer_3.Add(self.button_1, 0, 0, 0)
        grid_sizer_3.AddGrowableCol(1)
        grid_sizer_3.AddGrowableCol(3)
        grid_sizer_3.AddGrowableCol(5)
        grid_sizer_3.AddGrowableCol(7)
        grid_sizer_3.AddGrowableCol(9)
        grid_sizer_1.Add(grid_sizer_3, 1, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.label_6, 0, 0, 0)
        grid_sizer_4.Add(self.txtNombre2, 0, 0, 0)
        grid_sizer_4.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.label_7, 0, 0, 0)
        grid_sizer_4.Add(self.txtApellido2, 0, 0, 0)
        grid_sizer_4.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.label_8, 0, 0, 0)
        grid_sizer_4.Add(self.txtCedula2, 0, 0, 0)
        grid_sizer_4.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.label_14, 0, 0, 0)
        grid_sizer_4.Add(self.txtMerito1, 0, 0, 0)
        grid_sizer_4.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.label_15, 0, 0, 0)
        grid_sizer_4.Add(self.txtCurso1, 0, 0, 0)
        grid_sizer_4.Add((20, 20), 0, 0, 0)
        grid_sizer_4.Add(self.button_1_copy, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_4, 1, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.label_9, 0, 0, 0)
        grid_sizer_5.Add(self.txtNombre3, 0, 0, 0)
        grid_sizer_5.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.label_10, 0, 0, 0)
        grid_sizer_5.Add(self.txtApellido3, 0, 0, 0)
        grid_sizer_5.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.label_11, 0, 0, 0)
        grid_sizer_5.Add(self.txtCedula3, 0, 0, 0)
        grid_sizer_5.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.label_16, 0, 0, 0)
        grid_sizer_5.Add(self.txtMerito3, 0, 0, 0)
        grid_sizer_5.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.label_17, 0, 0, 0)
        grid_sizer_5.Add(self.txtCurso3, 0, 0, 0)
        grid_sizer_5.Add((20, 20), 0, 0, 0)
        grid_sizer_5.Add(self.button_1_copy_copy, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_5, 1, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_18, 0, 0, 0)
        grid_sizer_6.Add(self.txtNombre4, 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_19, 0, 0, 0)
        grid_sizer_6.Add(self.txtApellido4, 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_20, 0, 0, 0)
        grid_sizer_6.Add(self.txtCedula4, 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_21, 0, 0, 0)
        grid_sizer_6.Add(self.txtMerito4, 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.label_22, 0, 0, 0)
        grid_sizer_6.Add(self.txtCurso4, 0, 0, 0)
        grid_sizer_6.Add((20, 20), 0, 0, 0)
        grid_sizer_6.Add(self.button_1_copy_copy_copy, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_6, 1, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_23, 0, 0, 0)
        grid_sizer_7.Add(self.txtNombre5, 0, 0, 0)
        grid_sizer_7.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_24, 0, 0, 0)
        grid_sizer_7.Add(self.txtApellido5, 0, 0, 0)
        grid_sizer_7.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_25, 0, 0, 0)
        grid_sizer_7.Add(self.txtCedula5, 0, 0, 0)
        grid_sizer_7.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_26, 0, 0, 0)
        grid_sizer_7.Add(self.txtMerito5, 0, 0, 0)
        grid_sizer_7.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_27, 0, 0, 0)
        grid_sizer_7.Add(self.txtCurso5, 0, 0, 0)
        grid_sizer_7.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.button_1_copy_copy_copy_copy, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_7, 1, 0, 0)
        grid_sizer_1.AddGrowableCol(0)
        sizer_1.Add(grid_sizer_1, 1, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnSeleccionar1(self, event):  # wxGlade: Principal.<event_handler>
        con=sq3.connect('Sisep.s3db')
        con.text_factory=str #pa quitar la U
        cur = con.cursor()
        frm=self
        Ce=frm.txtCedula.GetValue()
        dlg = wx.MessageDialog(None, 'Desea Realizar la Seleccion',
                           'Dialogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            cur.execute("update examen set seleccion=? where Cedula=?",("SI",Ce))
            wx.MessageBox('Postulante Seleccionado', 'Caja de mensaje')
            con.commit()
            self.Hide()
        dlg.Destroy()
        


    def OnSeleccionar2(self, event):  # wxGlade: Principal.<event_handler>
        con=sq3.connect('Sisep.s3db')
        con.text_factory=str #pa quitar la U
        cur = con.cursor()
        frm=self
        Ce=frm.txtCedula2.GetValue()
        dlg = wx.MessageDialog(None, 'Desea Realizar la Seleccion',
                           'Dialogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            cur.execute("update examen set seleccion=? where Cedula=?",("SI",Ce))
            wx.MessageBox('Postulante Seleccionado', 'Caja de mensaje')
            con.commit()
            self.Hide()
        dlg.Destroy()

    def OnSeleccionar3(self, event):  # wxGlade: Principal.<event_handler>
        con=sq3.connect('Sisep.s3db')
        con.text_factory=str #pa quitar la U
        cur = con.cursor()
        frm=self
        Ce=frm.txtCedula3.GetValue()
        dlg = wx.MessageDialog(None, 'Desea Realizar la Seleccion',
                           'Dialogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            cur.execute("update examen set seleccion=? where Cedula=?",("SI",Ce))
            wx.MessageBox('Postulante Seleccionado', 'Caja de mensaje')
            con.commit()
            self.Hide()
        dlg.Destroy()

    def OnBuscar(self, event):  # wxGlade: Principal.<event_handler>
        if self.Validate():
            f.BuscarPostulantesSeleccion(self)
    def OnSeleccionar4(self, event):  # wxGlade: Principal.<event_handler>
        con=sq3.connect('Sisep.s3db')
        con.text_factory=str #pa quitar la U
        cur = con.cursor()
        frm=self
        Ce=frm.txtCedula4.GetValue()
        dlg = wx.MessageDialog(None, 'Desea Realizar la Seleccion',
                           'Dialogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            cur.execute("update examen set seleccion=? where Cedula=?",("SI",Ce))
            wx.MessageBox('Postulante Seleccionado', 'Caja de mensaje')
            con.commit()
            self.Hide()
        dlg.Destroy()
    def OnSeleccionar5(self, event):  # wxGlade: Principal.<event_handler>
        con=sq3.connect('Sisep.s3db')
        con.text_factory=str #pa quitar la U
        cur = con.cursor()
        frm=self
        Ce=frm.txtCedula5.GetValue()
        dlg = wx.MessageDialog(None, 'Desea Realizar la Seleccion',
                           'Dialogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            cur.execute("update examen set seleccion=? where Cedula=?",("SI",Ce))
            wx.MessageBox('Postulante Seleccionado', 'Caja de mensaje')
            con.commit()
            self.Hide()
        dlg.Destroy()
# end of class Principal
class ContieneDatos(wx.PyValidator):
    def __init__(self):
        wx.PyValidator.__init__(self)

    def Clone(self):
        """
        Note que todo validador debe implementar
        # el método Clone().
        """
        return ContieneDatos()

    def Validate(self, win):
        textCtrl = self.GetWindow()
        text = textCtrl.GetValue()
        if len(text) == 0:
            wx.MessageBox("Este campo debe contener algún texto!",
                          "Error")
            textCtrl.SetBackgroundColour("red")
            textCtrl.SetFocus()
            textCtrl.Refresh()
            return False
        else:
            textCtrl.SetBackgroundColour(
                               wx.SystemSettings_GetColour(
                               wx.SYS_COLOUR_WINDOW))
            textCtrl.Refresh()
            return True

    def TransferToWindow(self):
        return True

    def TransferFromWindow(self):
        return True